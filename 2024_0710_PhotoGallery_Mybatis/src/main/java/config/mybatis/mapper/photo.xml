<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="photo"> <!--  헷갈리지 말것 여기는 네임스페이스 이름이다. -->
	<!-- 전체조회 -->
	<select id="photo_list" resultType="photo">
		select * from photo order by p_idx desc
	</select>
	
	<!--  전체 레코드 수 구하기 -->
	<select id="photo_row_total" resultType="int"> 
		select nvl(count(*), 0) from photo
	</select>
	
	
	
	<!--  p_idx에 해당하는 PhotoVo 조회 -->
	<select id="photo_one" resultType="photo" parameterType="int">
		select * from photo where p_idx=#{ p_idx }
	</select>
	
	<delete id="photo_delete" parameterType="int">
		delete from photo where p_idx=#{ p_idx } 
	</delete>
	
	<insert id="photo_insert" parameterType="photo">
	insert into photo values(seq_photo_idx.nextVal,
							 #{p_title},
							 #{p_content},
							 #{p_filename}, 
							 #{p_ip},
							 sysdate,
							 #{mem_idx},
							 #{mem_name}
							 )
	
	</insert>
	
	<update id="photo_update_filename" parameterType="photo">
		update photo set p_filename=#{p_filename} where p_idx=#{p_idx}
	</update>
	
	<update id="photo_update" parameterType="photo">
		update photo set p_title=#{p_title},p_content=#{p_content},p_ip=#{p_ip},p_regdate=sysdate where p_idx=#{p_idx}
	</update>
	
	
	<!-- Paging별 조회 -->
	<select id="photo_list_page" parameterType="Map" resultType="photo">
		select * from 
		( 
			select
				rank() over(order by p_idx desc) as no,  --no라는 별명을 가진 컬럼을 만든다. rank로 순서를 부여 p_idx를 내림차순한 순서대로  
				p.* 
			from 
		 		(select * from photo) p
		) 
		where 
			no between #{ start } and #{ end }
  
  
	</select>
</mapper>












